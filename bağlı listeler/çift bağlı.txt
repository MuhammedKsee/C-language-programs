#include<stdio.h>
#include<stdlib.h>

struct node{
    struct node *prev;
    int data;
    struct node *next;
};

struct node *createList(int data){
    struct node *head = (struct node *)malloc(sizeof(struct node));
    
    head->prev = NULL;
    head->data = data;
    head->next = NULL;
    return head;
}


void print(struct node *head){
    struct node *current = head;
    
    while (current != NULL){
        printf("%d -> ",current->data);
        current = current->next;
    }
    printf("NULL\n");
}

void *addFront(struct node *head,int data){
    struct node *temp = (struct node *)malloc(sizeof(struct node));
    temp->data = data;
    temp->prev = NULL;
    temp->next = head;
    head->prev = temp;
    head = temp;
}

void *addLast(struct node *head, int data){
    struct node *temp = head;
    struct node *newNode = (struct node *)malloc(sizeof(struct node));
    while(temp->next!=NULL){
        temp= temp->next;
    }
    newNode->data = data;
    newNode->prev = temp;
    temp->next = newNode;
    newNode->next = NULL;
    
}

void *del(struct node *head,int data){
    struct node *temp = head;
    struct node *remover = (struct node *)malloc(sizeof(struct node));
    if(head->data == data){
      head = head->next;
      free(temp);
      head->prev = NULL;
      return;
    } 
    while(temp->data!=data){
        temp = temp->next;
    }
    remover = temp;
    temp->prev->next = temp->next;
    temp->next->prev = temp->prev;
    
    free(remover);
    
}


int main (){
    struct node *head = createList(12);
    
    print(head);
    
    head = addFront(head,15);
    
    print(head);
    head = addFront(head,18);
    
    print(head);
    
    addLast(head,9);
    
    print(head);
    
    del(head,18);
    
    print(head);

    
    
    
}
