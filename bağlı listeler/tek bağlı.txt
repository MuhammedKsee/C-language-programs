#include <stdio.h>
#include <stdlib.h>

struct node{
    int data;
    struct node *next;
};

struct node *createList(int data){
    struct node *head=(struct node *)malloc(sizeof(struct node));
    head->data = data;
    head->next = NULL;
    
    return head;
}

void *appendFirst(struct node *head,int data){
    struct node *addfront=(struct node *)malloc(sizeof(struct node));
    addfront->data =data;
    addfront->next =head;
    head = addfront;
    
    return head;
}

void append(struct node *head,int data){
    struct node *newNode=(struct node *)malloc(sizeof(struct node));
    newNode->data =data;
    newNode->next =NULL;
        
        struct node *current = head;
        
        while (current->next!=NULL){
            current = current->next;
        }
        current->next = newNode;
    
}

void *del(struct node *head, int data){
    if(head!=NULL){
    struct node *temp = head;
    struct node *del = (struct node *)malloc(sizeof(struct node));
        if(head->data == data){
            head = head->next;
            free(temp);
        }
        else{
            while (temp->next && temp->next->data != data){
                temp = temp->next;
            }
            if(temp->next){
                del = temp->next;
                temp->next = del->next;
                free(del);
            }
        }
    }
    return head;

}

void printList(struct node *head){
    struct node *current = head;
    
    while (current!=NULL){
        printf("%d -> ",current->data);
        current = current->next;
    }
    printf("NULL\n");
    
}

void printReverse(struct node *head){
    if(head==NULL){
        return;
    }
    else{
    printReverse(head->next);
    printf("%d -> ",head->data);
    }
    
}

int main(){
    struct node *head = createList(15);
    printList(head);
    append(head, 23);
    printList(head);
    head =appendFirst(head, 34);

    printList(head);
    
    head = del(head,15);
    
    printList(head);
    
    append (head,12);
    
    printList(head);
    
    printReverse(head);
    return 0;
}



